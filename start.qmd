---
title: "Get Started"
---

## Is Positron for me?

::: callout-note
Positron is an early stage project under active development. We don't expect it to be the best fit for everyone doing data science right away.
:::

#### Positron might be a good fit for you today if...

-   you use VS Code for data science (Python or R) but wish it included more affordances for data-specific work like a dedicated console, variables pane, data explorer, and ways to interact with your plots.
-   you use Jupyterlab for data science (Python or R) and are ready for a more powerful, fully-featured IDE.
-   you use RStudio and want more ability to customize or extend your IDE.
-   you use additional languages beyond only Python or R in your day-to-day data science or package development work, like Rust, C++, JavaScript, or Lua.

#### Positron might *not* be a good fit for you today if...

-   you need stable, polished software, as Positron is still in beta and some features are unstable or unfinished.
-   you need all the features of the RStudio IDE, as Positron doesn’t have all RStudio’s features; some notable absences are inline output for Quarto and R Markdown, profiling, Sweave, RStudio Add-In support, etc.

## Machine prerequisites

Before [installing](download.qmd) Positron, ensure your Python and/or R environments are ready to work with Positron. You don't need to install both, but Positron doesn't bundle either Python or R.

### Windows prerequisites

If you're using Windows, make sure you have the [latest Visual C++ Redistributable](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#latest-microsoft-visual-c-redistributable-version) installed.

If you're an R user, note that Positron doesn't currently bundle [Rtools](https://cran.r-project.org/bin/windows/Rtools/). If you need Rtools for your package development or other work, you can either use the official guidance from CRAN on installing Rtools and putting it on the PATH, or alternatively, use [rig](https://github.com/r-lib/rig) to install and set up Rtools:

```bash
rig system rtools add
```

### Python prerequisites

Positron works with [actively supported versions](https://devguide.python.org/versions/#versions) of Python, from 3.8 to Python 3.12. We recommend [pyenv](https://github.com/pyenv/pyenv) and [pyenv for Windows](https://github.com/pyenv-win/pyenv-win) for managing Python versions. On Linux, you'll want to [be aware of the build requirements](https://github.com/pyenv/pyenv/wiki/common-build-problems); for example, you'll need the system library for SQLite (`sqlite-devel` or `libsqlite3-dev`) installed ahead of time so pyenv can properly build your chosen Python version for use with Positron.

Positron requires the [IPython kernel](https://pypi.org/project/ipykernel/) (version 6.19.1 or higher) to communicate with Python. By default, the IPython kernel is bundled with Positron for the CPython implementation (the standard Python implementation) and added to the [Python search path](https://docs.python.org/3/library/sys_path_init.html).

If you are using an implementation other than CPython, you'll need to install the IPython kernel manually. 

If you prefer finer control over your Python environment, set the `python.useBundledIpykernel` setting to false and install the IPython kernel manually.


#### Manually installing the IPython kernel

Positron prompts you to install the IPython kernel if it isn't found when you initially try to use a Python environment. Alternatively, you can add `ipykernel` to your package's existing requirements file, or install it manually as follows:

``` bash
python3 -m pip install ipykernel
```

### R prerequisites

Positron requires R 4.2 or higher. To install R, follow the instructions for your operating system at <https://cloud.r-project.org/>.

Alternatively, if you'd like to have multiple R installations, [rig](https://github.com/r-lib/rig) is a great tool to manage this which works well with Positron.

If you're an R package developer, you will also want to make sure that you have the current versions of certain R packages, all of which had recent updates to make them work more smoothly in Positron. Run one of the code snippets below to ensure that you are up-to-date:

``` r
# if you're a pak person (we are!)
pak::pak(c("usethis", "cli", "crayon", "rlang", "roxygen2", "pkgload"))

# or using base R
install.packages(c("usethis", "cli", "crayon", "rlang", "roxygen2", "pkgload"))
```
