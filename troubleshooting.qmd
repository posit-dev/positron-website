---
title: "Troubleshooting"
---

If you're having trouble with Positron, here are some resources and tools to help troubleshoot and resolve your problems.

## Reloading

Positron is an Electron app. If you're seeing what looks like a temporary glitch, you can try reloading the window.

A window reload shouldn't cause you to lose any session state, but it does cause the Positron front end, extensions, and all language packs to restart. Note that undo/redo history will also be cleared when you reload.

To reload the window, open the Command Palette and run the _Developer: Reload Window_ command.

## Python and R logs

### Output panel

Python and R logs are emitted in the Output panel. Each interpreter starts several output channels that can be used to help diagnose problems with a respective part of the system. 

Run the _Output: Show Output Channels_ command to show a list of output channels. You can then select one to view its output by name, like "R Language Pack".

Here's a list of some Positron-specific channels you may be interested in:

| Channel | Description |
| ------- | ----------- |
| Kernel | Communication from the Python or R kernel itself: requests to execute code, output to be shown in the Console, data used to build plots/environment/help panes, etc. This channel will have a name like "R X.Y.Z: Kernel." |
| Console/Notebook | Communication from the Console or Notebook running the Python or R kernel: messages the Console sends and receives, changes in the Console's state, etc. This channel will have a name like "Python X.Y.Z: Console." |
| Language Server | Debug logs from the server side of the language server Positron uses for any given interpreter. This channel will have a name like "R X.Y.Z: Language Server (Console)." |
| Language Pack | Debug logs from the extension that Positron uses to discover, start, and manage interpreters. This channel will have a name like "Python Language Pack." |
| Assistant | Debug logs from Positron Assistant, which powers the AI chat and code completions interfaces in Positron. |

### Log level

Most of these output channels have a log level associated with them that you can change in the settings UI. For example, you can change the log level for how much information is passed from the R kernel itself to the "R X.Y.Z: Kernel" output channel using the [`positron.r.kernel.logLevel` setting](positron://settings/positron.r.kernel.logLevel).

## Developer tools

Positron is built on Electron, which means it has a built-in developer tools panel similar to what you see in web browsers. When looking for the source of an error, the developer tools output can be helpful. 

Use these instructions to open the developer tools and check for errors or relevant log messages:

1. From the Command Palette, run the _Developer: Toggle Developer Tools_ command.
1. From the Developer Tools panel that appears, select the _Console_ tab.
1. When filing an issue on Github, include errors or log messages from the _Console_ tab that are related to the issue you're seeing.

## Resetting Positron

If you seem to have gotten things in a bad state, you can reset Positron to factory-fresh as follows.

1. Close all Positron instances completely.
2. Clear out Positron state according to your operating system.

::: {.panel-tabset group="os"}

## Windows

Delete Positron state:

```{.ps1 filename="PowerShell"}
Remove-Item -Path $env:APPDATA\Positron -Recurse -Force
```

Delete extensions:

```{.ps1 filename="PowerShell"}
Remove-Item -Path $env:USERPROFILE\.positron -Recurse -Force
```

## Mac

Delete Positron state:

```{.bash filename="Terminal"}
rm -rf ~/Library/Application\ Support/Positron
```

Delete extensions:

```{.bash filename="Terminal"}
rm -rf ~/.positron
```

## Linux

Delete Positron state:

```{.bash filename="Terminal"}
rm -rf ~/.config/Positron
```

Delete extensions:

```{.bash filename="Terminal"}
rm -rf ~/.positron
```

:::

3. [Download the latest release](./download.qmd) of Positron and install it.

## Ask for help

Finally, ask for help early and often. If you're having trouble, we'd like to hear about it, perhaps even before you blow away any state that might tell us what the issue was. Join us on [GitHub Discussions](https://github.com/posit-dev/positron/discussions)!
