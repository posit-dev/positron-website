---
title: "Folder Templates"
---

The New Folder from Template feature helps you quickly setup a a folder with an environment using a predefined template for a language or framework. 

To bring up the **New Folder from Template** dialog, select the "New" dropdown menu in the top-left or select the workspace switcher in the top-right. Select the "New Folder from Template" option from the menu to bring up the dialog.

You can also bring up the dialog by running the _Workspaces: New Folder from Template..._ command in the Command Palette.

### Select a template

When you open the **New Folder from Template** dialog, you will see a list of available templates.

Choose a template that best matches the language or framework for the work you are doing. The "Empty Project" option allows you to create a blank folder with no additional files or configuration.

### Folder name and location

After you select a template, enter a name for your new folder and choose a location on your system. Check the **Initialize Git repository** box if you want to create a Git repository in the new folder. Select **Next** to continue to template-specific configuration options.


### Python templates

When you select a Python-based template, the dialog guides you through setting up your Python environment. This ensures your project starts with the right tools and interpreter for your work.

A virtual environment keeps your projectâ€™s Python packages separate from other projects. This helps prevent conflicts between package versions and makes your work more reproducible. 

Select **Create a new virtual environment** if you want a clean, isolated setup for your project. This is the best choice for most users and new projects. Select **Use an existing environment** if you already have a Python environment with the packages you need, or if you require a shared environment. This option is helpful when you want to use specific tools or settings that are already configured.

**Environment Creation**

If you chose to create a new environment, you will need to select an environment manager tool such as `venv`, `conda`, or `uv` to create your new environment. For details about supported managers, see the [supported environment managers guide](python-installations.qmd#supported-environment-managers).

**Python Interpreter**

Select the version of Python you want to use. If you do not see the version you need, see the [Discovering Python Installations guide](python-installations.qmd) for help adding new interpreters and for details about how Positron discovers and manages Python environments.


### R templates

When you select an R-based template, the dialog guides you through setting up your R environment. This ensures your project starts with the right tools and interpreter for your work.

**R version**

Select the version of R you want to use. If the version you need is not listed, see the [Discovering R Installations guide](r-installations.qmd) for help adding new R versions and for details about how Positron discovers R versions.

**Advanced configuration**

You can choose to use `renv` for reproducible environments. Select **Use `renv` to create a reproducible environment** if you want to manage your project dependencies and ensure consistent package versions.

`renv` is an R package that manages project dependencies. It creates a snapshot of the R packages in your project and saves them in a `renv.lock` file. This makes it easy to share your project. Using `renv` helps you avoid problems caused by package updates or differences between computers. It ensures your project always uses the correct package versions, which makes your work more reliable and reproducible. This is especially helpful when you collaborate with others or work on long-term projects. To learn more about `renv`, see the [Introduction to renv guide](https://rstudio.github.io/renv/articles/renv.html).

### Finish

After you review your configuration options, select **Create** to set up your new folder with the selected template and settings. When setup is complete, select whether to open the folder in the current window or a new window.

By default, Positron starts a session for the interpreter you selected in the template. For more details on how to customize this behavior, see the [interpreter startup guide](interpreter-startup.qmd#configuring-interpreter-startup).