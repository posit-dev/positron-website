on:
  workflow_dispatch:
    inputs:
      release_channel:
        description: "Release channel, e.g. 'dailies', 'prereleases', 'staging'"
        options:
          - dailies
          - prereleases
          - staging
          - releases
        required: true
        default: staging
        type: choice
  push:
    branches: [ main ]

name: Quarto Publish

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for OIDC

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render and Publish 
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: netlify
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Configure AWS Credentials for S3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_S3_RW_ROLE }}
          aws-region: us-east-1

      # Parse download.qmd for the version in the form version: "2025.07.0-123" excluding everything after the dash
      - name: Extract Release Version
        id: release_version
        run: |
          version=$(grep -oP 'version:\s*"\K([0-9]+\.[0-9]+\.[0-9]+)' "${GITHUB_WORKSPACE}/download.qmd")
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Upload Release Notes to S3
        if: ${{ steps.release_version.outputs.version != '' }}
        run: |
          RELEASE_CHANNEL="${{ inputs.release_channel || 'releases' }}"
          S3_PREFIX="s3://posit-positron-downloads/positron/${RELEASE_CHANNEL}"
          aws s3 cp "${GITHUB_WORKSPACE}/release-notes/release.md" "${S3_PREFIX}/release-notes/release-${{ steps.release_version.outputs.version }}.md" --no-progress

      # Need to update the trust relationship policy on the PositronBuilds role in Posit Main Production
      # - name: Configure AWS Credentials for CloudFront
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_CDN_RW_ROLE }}
      #     aws-region: us-east-1

      # - name: Invalidate CloudFront Cache
      #   run: |
      #     aws cloudfront create-invalidation \
      #       --distribution-id ${{ secrets.AWS_CDN_DISTRIBUTION_ID }} \
      #       --paths \
      #         "/positron/${{ inputs.release_channel }}/release-notes/*" \
