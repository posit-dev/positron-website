---
title: "Data Explorer"
---

The Data Explorer is designed to complement code-first exploration of data,
allowing you to display data in a spreadsheet-like grid, temporarily filter and
sort data, and provide useful summary statistics directly inside of Positron.
The goal of the Data Explorer isn't to replace code-based workflows, but rather
supplement with ephemeral views of the data or summary statistics as you further
explore or modify the data via code.

The Data Explorer can be used to view raw data files (CSV, Parquet, etc.) in your
Positron workspace as well as dataframes in your active Python or R sessions.

The Data Explorer has three primary components:

* **[Data grid](data-explorer-data-grid.qmd):** Spreadsheet-like display of the individual cells and columns, as well as sorting
* **[Summary panel](data-explorer-summary-panel.qmd):** Column name, type, and missing data percentage for each column
* **[Filter bar](data-explorer-filter-bar.qmd):** Ephemeral filters for specific columns

![Data Explorer](images/data-explorer.png){fig-alt="Data explorer displaying filtered flight data with highlights. Left column shows column distribution and summary statistics. Main section lists data in a table. Top section shows filters such as year = 2013, month >= 2, and month is not null."}

## Opening the Data Explorer

There are a few ways to open the Data Explorer. If you want to look at data you
have loaded into memory already, you can navigate to the Variables Pane and
click on the table icon for a specific dataframe object.

![Data Explorer from the Variables Pane](images/data-explorer-variables.png){width=700 fig-alt="Variables pane interface showing data frame named df with expanded columns year, month, day, dep_time, sched_dep_time. In top row next to variable name and [336776 rows x 19 columns], a table icon is highlighted."}

Using code or the console, you can also run one of the following commands:

* In Python: `%view dataframe label`
* In R: `View(dataframe, "label")`

In Python, the `%view` magic can also be used with expressions, for example
`%view df[df['column'] > 10]`. In R, the `View` function can be composed
with expressions using pipe syntax:

```r
df |> mutate(doubled_column = column * 2) |> View()
```

Directly opening `.csv`, `.tsv`, and `.parquet` files (using DuckDB) is
supported by clicking on a file in the File Explorer or using the Command
Palette. GZIP-compressed CSV files ending in `.gz` can also be opened. We may
add support for more file types in the future.

![Data Explorer from the Files Pane](images/data-explorer-files-in-env.png){width=300 fig-alt="File explorer window showing a directory named 'POSITRON-ENV-EXAMPLE' with three files: 'air_quality_sample.csv,' 'flights.parquet,' and 'test.csv.gz.'"}

### Opening CSV files as plain text

After opening a CSV file in the Data Explorer, if you need to view the file in
the text editor, click on the "Open as Plain Text File" option in the top action
bar:

![Data Explorer Open as Plain Text](images/data-explorer-open-as-plain-text.png){width=300 fig-alt="Data explorer editor tab showing a file named 'air_quality_sample.csv.' An option to 'Open as Plain Text File' is highlighted in orange below file name."}

#### Learn more

* **[Data grid](data-explorer-data-grid.qmd):** Spreadsheet-like display of the individual cells and columns, as well as sorting
* **[Summary panel](data-explorer-summary-panel.qmd):** Column name, type and missing data percentage for each column
* **[Filter bar](data-explorer-filter-bar.qmd):** Ephemeral filters for specific columns