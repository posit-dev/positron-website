---
title: "Jupyter Notebooks"
---

[Jupyter Notebooks](https://jupyter-notebook.readthedocs.io/en/latest/notebook.html) offer a flexible, interactive UI for combining code, prose, and visualizations. In Positron, Jupyter Notebooks are fully supported and integrated into a complete data science IDE.

Positron enhances Jupyter Notebooks in several key ways:

-   Notebooks work out of the box. You don't need to install any additional dependencies into your R or Python environments.
-   Notebooks are automatically integrated into the Variables Pane, allowing you to view your data at a glance or in-depth with affordances such as the [Connections Pane](connections-pane.qmd) and [Data Explorer](data-explorer.qmd).
-   Language features such as autocompletion and go-to-definition work seamlessly across notebooks and plaintext files.

<!--# TODO: Add a screenshot showcasing a data science notebook with the variables pane populated -->

## Using Jupyter Notebooks

You can create and edit `.ipynb` files in Positron just as you would in other editors. For a general introduction to working with Jupyter Notebooks, see the [VS Code Jupyter Notebooks documentation](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).

### Setting up your environment

Positron comes prepackaged with Jupyter kernels for R and Python. Once you've [configured an R or Python environment](managing-interpreters.qmd) for Positron, you do not need to install any additional dependencies into your environment before using notebooks.

If an environment installed on your computer isn't available in Positron, you may want to read more about how Positron [discovers R](r-installations.qmd) and [Python installations](python-installations.qmd).

### Selecting an interpreter

When you first open a Jupyter Notebook, Positron automatically selects the most appropriate interpreter based on the notebook's language and the current workspace.

::: callout-tip
We recommend matching the selected interpreter for the workspace and the notebook, however, they can be controlled separately.
:::

You can manually select a different interpreter for the notebook by clicking the **Kernel Selector** button in the notebook toolbar or by running the **Notebook: Select Notebook Kernel** command.

![](images/jupyter-notebooks-kernel-selector.png)